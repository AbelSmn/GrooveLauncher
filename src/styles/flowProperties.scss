:root {
    --flow-touch-distance: -3px;
    --flow-rotate-scale: .06;
    --flow-touch-down-transition: .025s;
    --flow-touch-up-transition: .25s;
    --flow-perspective: 250px; //calc(min(100vw, 100vh));
}


@mixin flow-touch {
    transition: transform var(--flow-touch-up-transition) ease-out;
    --flow-touch: true;
    --flow-rotate-scale: .1;
    --flow-before-translate: 0px, 0px;
    --flow-after-translate: 0px, 0px;
    --flow-rotate-x: 0deg;
    --flow-rotate-y: 0deg;
    transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));

    //  &:active,
    &.active {
        transition: transform var(--flow-touch-down-transition) ease-in-out !important;
        transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
    }
}

@mixin flow-touch-disabled {
    transition: transform var(--flow-touch-up-transition) ease-out !important;
    --flow-touch: false;

    //  &:active,
    &.active {
        transition: transform var(--flow-touch-down-transition) ease-in-out !important;
        transform: none !important;
    }
}

.flow-touch,
.flow-touch-container>* {
    @include flow-touch
}

.metro-button {
    @include flow-touch;
    padding: 10px 20px;
    display: block;
    margin: 5px;
    background: var(--metro-background);
    color: var(--metro-foreground);
    border: none;
    box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
    font-size: 20px;
    text-transform: lowercase;
    text-align: left;
    width: max-content;
    height: min-content;

    &.active {
        background: var(--accent-color);
        color: white;
    }

    &.link {
        box-shadow: none !important;
        text-decoration: underline;
        background: transparent !important;
        color: var(--metro-foreground) !important;
        &.active{
            color: var(--accent-color) !important;
        }
    }

}

.metro-toggle-switch {
    --transition: 0;

    &[checked] {
        --transition: 1;
    }

    background: var(--metro-background);
    display: block;
    position: relative;
    width: 93px;
    height: 38px;
    box-shadow: inset 0px 0px 0px 2px var(--metro-background),
    inset 0px 0px 0px 5px var(--metro-foreground),
    inset 0px 0px 0px 9px var(--metro-background);
    background: linear-gradient(90deg, var(--accent-color) calc(9px + var(--transition) * 75px), var(--metro-background) calc(9px + var(--transition) * 75px));

    &::after {
        display: block;
        content: "";
        width: 20px;
        height: 38px;
        background: var(--metro-foreground);
        box-shadow: 0px 0px 0px 4px var(--metro-background);
        position: absolute;
        left: calc(2px + var(--transition)* 69px);
    }
}

.metro-dropdown-menu {
    height: 48px;
    text-transform: lowercase;
    overflow: hidden;

    perspective: var(--flow-perspective);

    &.active,
    &.clicked {
        box-shadow: inset 0px 0px 0px 3px var(--accent-color);
        background-color: white;
        color: black;
    }

    @include flow-touch;
    box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
    position: relative;

    &:not(.active) {
        transition: transform var(--flow-touch-up-transition) ease-out, height .2s ease-in !important;
    }

    &.clicked {
        height: 112px;


        .metro-dropdown-option {
            pointer-events: all !important;
            margin: 0px 10px;
            height: 56px;
        }
    }

    &:not(.clicked) {
        .metro-dropdown-option {
            pointer-events: none;
        }
    }

    .metro-dropdown-option {
        @include flow-touch;
        transition: height .2s ease-in, margin-top .2s ease-in;
        font-size: 25px;
        margin: 0px 10px;
        height: 48px;
        display: flex;
        align-items: center;
    }



}