:root {
    --flow-touch-distance: -10px;
    --flow-rotate-scale: .25;
    --flow-touch-down-transition: .025s;
    --flow-touch-up-transition: .25s;
    --flow-perspective: 1000px; //calc(min(100vw, 100vh));
}


@mixin flow-touch {
    transition: transform var(--flow-touch-up-transition) ease-out;
    --flow-touch: true;
    --flow-before-translate: 0px, 0px;
    --flow-after-translate: 0px, 0px;
    --flow-rotate-x: 0deg;
    --flow-rotate-y: 0deg;
    transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));

    //  &:active,
    &.active {
        transition: transform var(--flow-touch-down-transition) ease-in-out !important;
        transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
    }
}

@mixin flow-touch-disabled {
    transition: transform var(--flow-touch-up-transition) ease-out !important;
    --flow-touch: false;

    //  &:active,
    &.active {
        transition: transform var(--flow-touch-down-transition) ease-in-out !important;
        transform: none !important;
    }
}

.flow-touch,
.flow-touch-container>* {
    @include flow-touch;
}

@mixin metro-text-input {
    border: none;
    height: 48px;
    box-sizing: border-box;
    background: rgb(206, 207, 206);
    color: black;

    &:focus {
        background: white;
        box-shadow: inset 0px 0px 0px 4px var(--accent-color);

        &::placeholder {
            //color: transparent;
        }
    }

    font-size: 23px;
    padding: 10px;
}

@mixin metro-button {
    @include flow-touch;
    padding: 10px 20px;
    display: block;
    margin: 5px;
    background: var(--metro-background);
    color: var(--metro-foreground);
    border: none;
    box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
    font-size: 20px;
    text-transform: lowercase;
    text-align: left;
    width: max-content;
    height: min-content;

    &.t_active {
        background: var(--accent-color);
        color: white;
    }

    &.link {
        box-shadow: none !important;
        text-decoration: underline;
        background: transparent !important;
        color: var(--metro-foreground) !important;

        &.t_active {
            color: var(--accent-color) !important;
        }
    }

}

@mixin metro-range-input {
    --flow-metro-range-input: true;
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 12px;
    background: var(--metro-elevated);
    outline: none;

    &::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 12px;
        height: 24px;
        background: var(--metro-foreground);
    }

    &::-moz-range-thumb {
        width: 12px;
        height: 24px;
        background: var(--metro-foreground);
    }
}

.metro-text-input {
    @include metro-text-input();
}

.metro-button {
    @include metro-button;
}

.metro-range-input {
    @include metro-range-input;
}

.metro-toggle-switch {
    --transition: 0;

    &[checked] {
        --transition: 1;
    }

    background: var(--metro-background);
    display: block;
    position: relative;
    width: 93px;
    height: 38px;
    box-shadow: inset 0px 0px 0px 2px var(--metro-background),
    inset 0px 0px 0px 5px var(--metro-foreground),
    inset 0px 0px 0px 9px var(--metro-background);
    background: linear-gradient(90deg, var(--accent-color) calc(9px + var(--transition) * 75px), var(--metro-background) calc(9px + var(--transition) * 75px));

    &::after {
        display: block;
        content: "";
        width: 20px;
        height: 38px;
        background: var(--metro-foreground);
        box-shadow: 0px 0px 0px 4px var(--metro-background);
        position: absolute;
        left: calc(2px + var(--transition)* 69px);
    }
}

.metro-dropdown-menu {
    height: 48px;
    text-transform: lowercase;
    overflow: hidden;

    perspective: var(--flow-perspective);

    &.t_active,
    &.clicked {
        box-shadow: inset 0px 0px 0px 3px var(--accent-color);
        background-color: white;
        color: black;
    }

    @include flow-touch;
    box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
    position: relative;

    &:not(.active) {
        transition: transform var(--flow-touch-up-transition) ease-out, height .2s ease-in !important;
    }

    &.active {
        transition: transform var(--flow-touch-down-transition) ease-in-out, height .2s ease-in !important;

    }

    &.clicked {
        height: 112px;


        .metro-dropdown-option {
            pointer-events: all !important;
            margin: 0px 10px;
            height: 56px;
        }
    }

    &:not(.clicked) {
        .metro-dropdown-option {
            pointer-events: none;
        }
    }

    .metro-dropdown-option {
        @include flow-touch;
        //transition: var(--flow-touch-up-transition) ease-out, transform var(--flow-touch-up-transition) ease-out, height .2s ease-in, margin-top .2s ease-in;
        transition: transform var(--flow-touch-up-transition) ease-out, height .2s ease-in, margin-top .2s ease-in;
        font-size: 25px;
        margin: 0px 10px;
        height: 48px;
        display: flex;
        align-items: center;

        span,
        & {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    }



}

.metro-progress-bar {
    position: relative;
    width: 100%;
    height: 5px;
    background: rgb(127, 127, 127, .2);
    --value: 0;
    --value-2: 0;
    --value-color: var(--accent-color);
    --value-2-color: var(--accent-color);

    &::after {
        position: absolute;
        z-index: 1;
        transition: width .2s ease-in-out;
        content: "";
        display: block;
        width: calc(var(--value) * 100%);
        height: 100%;
        background: var(--value-color);
    }

    &::before {
        position: absolute;
        z-index: 2;
        transition: width .2s ease-in-out;
        content: "";
        display: block;
        width: calc(var(--value-2) * 100%);
        height: 100%;
        background: var(--value-2-color);
    }
}