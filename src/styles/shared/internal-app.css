:root {
  --metro-color-lime: #A4C400;
  --metro-color-green: #60A917;
  --metro-color-emerald: #008A00;
  --metro-color-teal: #00ABA9;
  --metro-color-cyan: #1BA1E2;
  --metro-color-cobalt: #3E65FF;
  --metro-color-indigo: #6A00FF;
  --metro-color-violet: #AA00FF;
  --metro-color-pink: #F472D0;
  --metro-color-magenta: #D80073;
  --metro-color-crimson: #A20025;
  --metro-color-red: #E51400;
  --metro-color-orange: #FA6800;
  --metro-color-amber: #F0A30A;
  --metro-color-yellow: #E3C800;
  --metro-color-brown: #825A2C;
  --metro-color-olive: #6d8764;
  --metro-color-steel: #647687;
  --metro-color-mauve: #76608A;
  --metro-color-taupe: #87794E;
  --accent-color: var(--metro-color-violet);
}

body:not(.light-mode) {
  --metro-background: black;
  --metro-foreground: white;
  --metro-opaque: #111511;
  --metro-opaque-2: white;
  --metro-transparent: rgb(0, 0, 0, .5);
  --metro-transparent-2: rgb(255, 255, 255, .5);
}

body.light-mode {
  --metro-background: white;
  --metro-foreground: black;
  --metro-opaque: #dfe0df;
  --metro-opaque-2: #a6a8a7;
  --metro-transparent: rgb(255, 255, 255, .5);
  --metro-transparent-2: rgb(0, 0, 0, .5);
}

@font-face {
  font-family: GrooveIcon;
  src: url(./../../assets/fonts/GrooveIcon.ttf);
}
@font-face {
  font-family: Selawik;
  src: url(./../../assets/fonts/SelawikVF.ttf);
}
@font-face {
  font-family: NotoSans;
  src: url(./../../assets/fonts/NotoSans.ttf);
}
@font-face {
  font-family: OpenSans;
  src: url(./../../assets/fonts/OpenSans.ttf);
}
@font-face {
  font-family: IconGlyphs;
  src: url(./../../assets/fonts/icons.ttf);
}
@font-face {
  font-family: SymbolsNerd;
  src: url(./../../assets/fonts/SymbolsNerd.ttf);
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Black.ttf") format("truetype");
  font-weight: 900;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Bold.ttf") format("truetype");
  font-weight: 700;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-ExtraBold.ttf") format("truetype");
  font-weight: 800;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-ExtraLight.ttf") format("truetype");
  font-weight: 200;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Light.ttf") format("truetype");
  font-weight: 300;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Medium.ttf") format("truetype");
  font-weight: 500;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Regular.ttf") format("truetype");
  font-weight: 400;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-SemiBold.ttf") format("truetype");
  font-weight: 600;
}
@font-face {
  font-family: "NotoCustom";
  src: url("./../../assets/fonts/NotoCustom/NotoSans-Thin.ttf") format("truetype");
  font-weight: 100;
}
:root {
  --flow-touch-distance: -10px;
  --flow-rotate-scale: .25;
  --flow-touch-down-transition: .025s;
  --flow-touch-up-transition: .25s;
  --flow-perspective: 1000px;
}

.flow-touch,
.flow-touch-container > * {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.flow-touch.active,
.flow-touch-container > *.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}

.metro-button {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  padding: 10px 20px;
  display: block;
  margin: 5px;
  background: var(--metro-background);
  color: var(--metro-foreground);
  border: none;
  box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
  font-size: 20px;
  text-transform: lowercase;
  text-align: left;
  width: -moz-max-content;
  width: max-content;
  height: -moz-min-content;
  height: min-content;
}
.metro-button.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-button.t_active {
  background: var(--accent-color);
  color: white;
}
.metro-button.link {
  box-shadow: none !important;
  text-decoration: underline;
  background: transparent !important;
  color: var(--metro-foreground) !important;
}
.metro-button.link.t_active {
  color: var(--accent-color) !important;
}

.metro-toggle-switch {
  --transition: 0;
  background: var(--metro-background);
  display: block;
  position: relative;
  width: 93px;
  height: 38px;
  box-shadow: inset 0px 0px 0px 2px var(--metro-background), inset 0px 0px 0px 5px var(--metro-foreground), inset 0px 0px 0px 9px var(--metro-background);
  background: linear-gradient(90deg, var(--accent-color) calc(9px + var(--transition) * 75px), var(--metro-background) calc(9px + var(--transition) * 75px));
}
.metro-toggle-switch[checked] {
  --transition: 1;
}
.metro-toggle-switch::after {
  display: block;
  content: "";
  width: 20px;
  height: 38px;
  background: var(--metro-foreground);
  box-shadow: 0px 0px 0px 4px var(--metro-background);
  position: absolute;
  left: calc(2px + var(--transition) * 69px);
}

.metro-dropdown-menu {
  height: 48px;
  text-transform: lowercase;
  overflow: hidden;
  perspective: var(--flow-perspective);
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
  position: relative;
}
.metro-dropdown-menu.t_active, .metro-dropdown-menu.clicked {
  box-shadow: inset 0px 0px 0px 3px var(--accent-color);
  background-color: white;
  color: black;
}
.metro-dropdown-menu.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-dropdown-menu:not(.active) {
  transition: transform var(--flow-touch-up-transition) ease-out, height 0.2s ease-in !important;
}
.metro-dropdown-menu.clicked {
  height: 112px;
}
.metro-dropdown-menu.clicked .metro-dropdown-option {
  pointer-events: all !important;
  margin: 0px 10px;
  height: 56px;
}
.metro-dropdown-menu:not(.clicked) .metro-dropdown-option {
  pointer-events: none;
}
.metro-dropdown-menu .metro-dropdown-option {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  transition: height 0.2s ease-in, margin-top 0.2s ease-in;
  font-size: 25px;
  margin: 0px 10px;
  height: 48px;
  display: flex;
  align-items: center;
}
.metro-dropdown-menu .metro-dropdown-option.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-dropdown-menu .metro-dropdown-option span, .metro-dropdown-menu .metro-dropdown-option {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  white-space: nowrap;
}

body,
html {
  color-scheme: dark;
  color: var(--metro-foreground);
  perspective: var(--flow-perspective);
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100vw;
  height: 100vh;
  margin: 0px;
  padding: 18px 22px;
  box-sizing: border-box;
}

body.showBackground {
  background-color: var(--metro-background) !important;
}
body.reduced-motion *, body.reduced-motion {
  perspective: 9999999px !important;
  --flow-perspective: 9999999px !important;
}

img {
  text-indent: -10000px;
}

* {
  font-family: SymbolsNerd, OpenSans;
  touch-action: none;
  -moz-user-select: none;
       user-select: none;
  user-drag: none;
  -webkit-user-select: none;
  -webkit-user-drag: none;
  outline: transparent;
  cursor: default !important;
}
body.font-1 * {
  font-family: SymbolsNerd, NotoSans;
}
body.font-2 * {
  font-family: SymbolsNerd, CustomFont, OpenSans;
}/*# sourceMappingURL=internal-app.css.map */