:root {
  --flow-touch-distance: -10px;
  --flow-rotate-scale: .25;
  --flow-touch-down-transition: .025s;
  --flow-touch-up-transition: .25s;
  --flow-perspective: 1000px;
}

.flow-touch,
.flow-touch-container > * {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.flow-touch.active,
.flow-touch-container > *.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}

.metro-button {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  padding: 10px 20px;
  display: block;
  margin: 5px;
  background: var(--metro-background);
  color: var(--metro-foreground);
  border: none;
  box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
  font-size: 20px;
  text-transform: lowercase;
  text-align: left;
  width: -moz-max-content;
  width: max-content;
  height: -moz-min-content;
  height: min-content;
}
.metro-button.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-button.t_active {
  background: var(--accent-color);
  color: white;
}
.metro-button.link {
  box-shadow: none !important;
  text-decoration: underline;
  background: transparent !important;
  color: var(--metro-foreground) !important;
}
.metro-button.link.t_active {
  color: var(--accent-color) !important;
}

.metro-toggle-switch {
  --transition: 0;
  background: var(--metro-background);
  display: block;
  position: relative;
  width: 93px;
  height: 38px;
  box-shadow: inset 0px 0px 0px 2px var(--metro-background), inset 0px 0px 0px 5px var(--metro-foreground), inset 0px 0px 0px 9px var(--metro-background);
  background: linear-gradient(90deg, var(--accent-color) calc(9px + var(--transition) * 75px), var(--metro-background) calc(9px + var(--transition) * 75px));
}
.metro-toggle-switch[checked] {
  --transition: 1;
}
.metro-toggle-switch::after {
  display: block;
  content: "";
  width: 20px;
  height: 38px;
  background: var(--metro-foreground);
  box-shadow: 0px 0px 0px 4px var(--metro-background);
  position: absolute;
  left: calc(2px + var(--transition) * 69px);
}

.metro-dropdown-menu {
  height: 48px;
  text-transform: lowercase;
  overflow: hidden;
  perspective: var(--flow-perspective);
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  box-shadow: inset 0px 0px 0px 3px var(--metro-foreground);
  position: relative;
}
.metro-dropdown-menu.t_active, .metro-dropdown-menu.clicked {
  box-shadow: inset 0px 0px 0px 3px var(--accent-color);
  background-color: white;
  color: black;
}
.metro-dropdown-menu.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-dropdown-menu:not(.active) {
  transition: transform var(--flow-touch-up-transition) ease-out, height 0.2s ease-in !important;
}
.metro-dropdown-menu.clicked {
  height: 112px;
}
.metro-dropdown-menu.clicked .metro-dropdown-option {
  pointer-events: all !important;
  margin: 0px 10px;
  height: 56px;
}
.metro-dropdown-menu:not(.clicked) .metro-dropdown-option {
  pointer-events: none;
}
.metro-dropdown-menu .metro-dropdown-option {
  transition: transform var(--flow-touch-up-transition) ease-out;
  --flow-touch: true;
  --flow-before-translate: 0px, 0px;
  --flow-after-translate: 0px, 0px;
  --flow-rotate-x: 0deg;
  --flow-rotate-y: 0deg;
  transform: translate(var(--flow-before-translate)) translateZ(0px) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(0deg) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
  transition: height 0.2s ease-in, margin-top 0.2s ease-in;
  font-size: 25px;
  margin: 0px 10px;
  height: 48px;
  display: flex;
  align-items: center;
}
.metro-dropdown-menu .metro-dropdown-option.active {
  transition: transform var(--flow-touch-down-transition) ease-in-out !important;
  transform: translate(var(--flow-before-translate)) translateZ(var(--flow-touch-distance)) rotateZ(calc(var(--flow-rotate-y) * -1)) rotateX(calc(var(--flow-rotate-x) * var(--flow-rotate-scale))) rotateZ(var(--flow-rotate-y)) translate(var(--flow-after-translate));
}
.metro-dropdown-menu .metro-dropdown-option span, .metro-dropdown-menu .metro-dropdown-option {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  white-space: nowrap;
}/*# sourceMappingURL=flowTouch.css.map */